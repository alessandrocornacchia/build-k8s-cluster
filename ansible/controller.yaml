---
- name: Install pre-requisites
  hosts: all
  become: true  # needs sudo priviledges
  tags: pre
  tasks:
    - name: Set sudoers for ansible_user
      ansible.builtin.copy:
        dest: /etc/sudoers.d/{{ ansible_user }}
        content: |
          {{ ansible_user }} ALL=(ALL) NOPASSWD: ALL
        owner: root
        group: root
        mode: 0440  

- name: Configure aliases for kubectl
  hosts: all
  tags: alias
  tasks:
    - name: Create alias k for kubectl
      lineinfile:
        path: "{{ ansible_user_dir }}/.bashrc"
        line: "alias k=kubectl"
        create: yes

# install helm on all kubernetes nodes
- name: Kube packages
  hosts: control_plane:workers
  tags: kubeconfig
  tasks:
    - name: Download Helm installation script
      get_url:
        url: https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        dest: /tmp/get_helm.sh
        mode: '0700'

    - name: Execute Helm installation script
      command: /tmp/get_helm.sh

    - name: Clean up installation script
      file:
        path: /tmp/get_helm.sh
        state: absent

# run on plane
- name: Create Control Plane
  hosts: control_plane
  become: true
  tasks:
      
    - name: Debug ansible_host IP
      debug:
        msg: "Control plane IP is {{ ansible_host }}. Pod CIDR is {{ hostvars[inventory_hostname]['pod_cidr'] }}"

    - name: Initialize Kubernetes control plane
      command: >
        kubeadm init 
        --pod-network-cidr={{ hostvars[inventory_hostname]['pod_cidr'] }} 
        --control-plane-endpoint={{ ansible_host }}
        --cri-socket /var/run/cri-dockerd.sock
      register: kubeadm_init

# runs as non root user
- name: Initialize Control Plane
  hosts: control_plane
  tags: kubeconfig  
  tasks:
    - name: Create .kube directory
      file:
        path: $HOME/.kube
        state: directory
        mode: '0755'

    - name: Copy admin.conf
      become: true
      copy:
        src: /etc/kubernetes/admin.conf
        dest: "/home/{{ ansible_user }}/.kube/config"
        remote_src: yes
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: '0644'

    - name: Untaint control plane node
      command: kubectl taint nodes {{ ansible_hostname }} node-role.kubernetes.io/control-plane:NoSchedule-

    - name: Create kube-flannel namespace
      command: kubectl create ns kube-flannel
      ignore_errors: true

    - name: Label kube-flannel namespace
      command: kubectl label --overwrite ns kube-flannel pod-security.kubernetes.io/enforce=privileged

    - name: Add Flannel helm repo
      command: helm repo add flannel https://flannel-io.github.io/flannel/

    - name: Install Flannel CNI
      command: helm install flannel --set podCidr={{ hostvars[inventory_hostname]['pod_cidr'] }} --namespace kube-flannel flannel/flannel